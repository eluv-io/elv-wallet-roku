import "pkg:/source/stores/ContentStore.bs"
import "pkg:/source/stores/RootStore.bs"
import "pkg:/components/utils/Utils.bs"
import "pkg:/source/stores/TokenStore.bs"

namespace Stores
    sub InitStores()
        g = Utils.requireGlobalNode()
        storeInit = g.storeInit
        if (storeInit <> invalid) and storeInit
            print "redundant init. Skipping."
            return
        end if
        g.AddFields({ storeInit: true })
        ' Do store init here
        RootStore()
    end sub

    sub RootStore() as RootStore
        g = Utils.requireGlobalNode()
        if g.rootStore = invalid
            g.addFields({ rootStore: new RootStore() })
        end if
        return g.rootStore
    end sub

    sub ContentStore() as RootStore
        g = Utils.requireGlobalNode()
        if g.contentStore = invalid
            _rootStore = Stores.RootStore()
            g.addFields({ contentStore: new ContentStore(_rootStore) })
        end if
        return g.contentStore
    end sub

    sub TokenStore() as RootStore
        g = Utils.requireGlobalNode()
        if g.tokenStore = invalid
            _rootStore = Stores.RootStore()
            g.addFields({ tokenStore: new TokenStore(_rootStore) })
        end if
        return g.tokenStore
    end sub
end namespace