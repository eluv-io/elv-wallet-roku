import "pkg:/components/utils/promise.bs"

namespace http
    sub init()
        task = CreateObject("roSGNode", "HttpTask")
        m.global.addFields({ httpTask: task })
        task.control = "run"
    end sub

    function get(url as string, printResponseBody = false) as object
        return request("GET", url, invalid, printResponseBody)
    end function

    function post(url as string, body = invalid, printResponseBody = false) as object
        return request("POST", url, body, printResponseBody)
    end function

    function request(method as string, url as string, body = invalid, printResponseBody = false) as object
        promise = promises.create()
        requestNode = CreateObject("roSGNode", "HttpRequest")
        requestNode.method = method
        requestNode.url = url
        requestNode.printResponseBody = printResponseBody
        if body <> invalid
            if type(body) = "roAssociativeArray" body = formatJson(body)
            requestNode.body = body
        end if
        promise.addFields({ request: requestNode })
        m.global.httpTask.request = promise
        return promise
    end function

    sub setStaging(staging as boolean)
        m.global.httpTask.staging = staging
    end sub
    
    function getStaging() as boolean
        return m.global.httpTask.staging
    end function
end namespace