import "pkg:/components/utils/RouterUtils.bs"
import "pkg:/components/utils/NftOps.bs"
import "pkg:/components/stores/stores.bs"

sub init()
    stores.contentStore()@.fetchWalletData()
    m.emptyWalletLabel = m.top.findNode("emptyWallet")
    m.grid = m.top.findNode("grid")
    m.grid.observeField("itemSelected", "onGridItemSelected")
    showPlaceholderGrid()
    stores.contentStore().observeField("nfts", "onNftsChanged")
    onNftsChanged()
end sub

sub onGridItemSelected()
    grid = m.grid
    item = grid.content.getChild(grid.itemSelected)
    if item.title = "placeholder"
        print "NFT grid still loading - ignoring click."
        return
    end if
    print "selected item index:", grid.itemSelected
    nftDetail = CreateObject("roSGNode", "NftDetail")
    nftDetail.nft = item
    router()@.show({ view: nftDetail })
end sub

sub showPlaceholderGrid()
    content = createObject("roSGNode", "ContentNode")
    for i = 0 to 8
        content.createChild("ContentNode").title = "placeholder"
    end for
    m.grid.content = content
end sub

sub onNftsChanged()
    nfts = stores.contentStore().nfts
    if nfts = invalid
        print "MyItems waiting for nfts to load..."
    else if nfts.count() = 0
        m.emptyWalletLabel.visible = true
        m.grid.visible = false
    else
        m.emptyWalletLabel.visible = false
        m.grid.visible = true
        m.grid.content = NftOps.nftsToContentNode(nfts)
    end if
end sub
