import "pkg:/components/utils/RouterUtils.bs"
import "pkg:/components/utils/Base58.bs"
import "pkg:/components/stores/stores.bs"

sub init()
    signOutButton = m.top.findNode("btn_signout")
    signOutButton.observeField("buttonSelected", "onSignOutClicked")

    walletAddress = stores.tokenStore().walletAddress
    m.top.findNode("address").text = `Address: ${walletAddress}`

    userId = walletAddress
    if userId.startsWith("0x")
        userId = userId.mid(2)
    end if
    userId = base58.encode(userId)
    m.top.findNode("userid").text = `User ID: iusr${userId}`

    config = stores.fabricConfigStore().config
    networkName = config.qspace.names[0]
    m.top.findNode("fabricnode").text = `Fabric Node: ${config.network.services.fabric_api[0]}/s/${networkName}`
    m.top.findNode("authservice").text = `Authority Service: ${config.network.services.authority_service[0]}`
    m.top.findNode("ethservice").text = `Eth Service: ${config.network.services.ethereum_api[0]}`

    prettyNetworkName = networkName
    if networkName = "main"
        prettyNetworkName = "Main"
    else if networkName = "demov3"
        prettyNetworkName = "Demo"
    end if
    m.top.findNode("networkName").text = `Network: ${prettyNetworkName}`
end sub

sub onSignOutClicked()
    stores.tokenStore()@.wipe()
    router().removeStack = "app"
end sub
