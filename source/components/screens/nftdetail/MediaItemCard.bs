import "pkg:/components/utils/NftOps.bs"
import "pkg:/components/utils/UrlUtil.bs"
sub init()
    m.image = m.top.findNode("image")
    m.title = m.top.findNode("title")
    m.overlay = m.top.findNode("overlay")
    m.video_icon = m.top.findNode("video_icon")
end sub

sub onItemContentChanged()
    content = m.top.itemContent.aa

    m.title.text = content.name

    m.image.uri = UrlUtil.appendQuery(content.image, "height", m.top.height)

    m.video_icon.visible = isVideo(content)
end sub

sub onSizeChanged()
    width = m.top.width
    height = m.top.height
    m.image.width = width
    m.image.height = height
    m.overlay.width = width
    m.overlay.height = height

    ' Assume icon is 1x1 ratio
    iconSize = height * 0.3
    m.video_icon.height = iconSize
    m.video_icon.width = iconSize
    m.video_icon.translation = [(width - iconsize) / 2, (height - iconSize) / 2]

    padding = 20
    m.title.width = width - (padding * 2)
    m.title.height = height - (padding * 2)
    m.title.translation = [padding, padding]
end sub

sub onFocusChanged()
    hasFocus = m.top.rowFocusPercent > 0.8 and m.top.focusPercent > 0.8
    m.title.visible = hasFocus
    m.video_icon.visible = not hasFocus and isVideo()
    m.overlay.visible = hasFocus
end sub

function isVideo(content = m.top.itemContent?.aa)
    return content?.media_type = NFtOps.MediaType.VIDEO
end function
