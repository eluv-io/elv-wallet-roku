import "pkg:/components/utils/NodeUtil.bs"

' Don't extend this class, just create an instance and set the view you want to display in [showView]
' Dialogs automatically saves and restores parent focus when dismissed.

sub init()
    m.top.width = 1920
    m.top.height = 1080
    m.top.color = "#000000BF"
end sub

sub onShowView()
    view = m.top.showView
    if view = invalid or m.top.getChildCount() > 0
        ' This may be called more than once if m.top.showView changes internally,
        ' we only care about the first time it is set.
        return
    end if

    dialog = m.top
    dialogParent = dialog.getScene()

    ' Store parent's current focus
    m.originalParentFocus = findFocusedNode(dialogParent.focusedChild)

    ' Attach content to dialog
    dialog.appendChild(view)

    ' Finally, attach dialog to parent
    dialogParent.appendChild(dialog)
    view.setFocus(true)

    if not view.doesExist("close")
        view.addField("close", "boolean", true)
    end if
    view.unobserveFieldScoped("close")
    view.observeFieldScoped("close", "dismiss")
end sub

sub dismiss()
    ' Remove dialog from parent
    m.top.getParent().removeChild(m.top)
    ' Restore parent's original focus
    m.originalParentFocus.setFocus(true)
end sub

function onKeyEvent(key as string, press as boolean) as boolean
    if press
        if key = "back"
            dismiss()
            return true
        end if
    end if
    return false
end function
