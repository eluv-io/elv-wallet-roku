namespace FontStyles
    function getFontForStyle(fontStyle)
        if fontStyle = ""
            fontStyle = "label_40"
        end if
        font = CreateObject("roSGNode", "Font")
        if fontStyle = "title_69"
            font.size = 69
            font.uri = "pkg:/fonts/inter_SemiBold.ttf"
        else if fontStyle = "title_62"
            font.size = 62
            font.uri = "pkg:/fonts/inter_SemiBold.ttf"
        else if fontStyle = "title_51"
            font.size = 51
            font.uri = "pkg:/fonts/inter_SemiBold.ttf"
        else if fontStyle = "title_48"
            font.size = 48
            font.uri = "pkg:/fonts/inter_SemiBold.ttf"
        else if fontStyle = "title_45"
            font.size = 45
            font.uri = "pkg:/fonts/inter_SemiBold.ttf"
        else if fontStyle = "body_32"
            font.size = 33
            font.uri = "pkg:/fonts/inter_regular.ttf"
        else if fontStyle = "header_48"
            font.size = 48
            font.uri = "pkg:/fonts/inter_bold.ttf"
        else if fontStyle = "carousel_48"
            font.size = 48
            font.uri = "pkg:/fonts/inter_regular.ttf"
        else if fontStyle = "carousel_36"
            font.size = 36
            font.uri = "pkg:/fonts/inter_regular.ttf"
        else if fontStyle = "header_53"
            font.size = 53
            font.uri = "pkg:/fonts/inter_regular.ttf"
        else if fontStyle = "header_30"
            font.size = 30
            font.uri = "pkg:/fonts/inter_regular.ttf"
        else if fontStyle = "button_32"
            font.size = 32
            font.uri = "pkg:/fonts/inter_regular.ttf"
        else if fontStyle = "button_28"
            font.size = 28
            font.uri = "pkg:/fonts/inter_SemiBold.ttf"
        else if fontStyle = "button_24"
            font.size = 24
            font.uri = "pkg:/fonts/inter_SemiBold.ttf"
        else if fontStyle = "label_40"
            font.size = 42
            font.uri = "pkg:/fonts/inter_Medium.ttf"
        else if fontStyle = "label_37"
            font.size = 37
            font.uri = "pkg:/fonts/inter_Medium.ttf"
        else if fontStyle = "label_24"
            font.size = 24
            font.uri = "pkg:/fonts/inter_Medium.ttf"
            ' From here on, these are "custom" styles we made for Roku and they don't correlate to anything on Figma
        else if fontStyle = "body_87"
            font.size = 87
            font.uri = "pkg:/fonts/inter_regular.ttf"
        else if fontStyle = "hint_57"
            font.size = 57
            font.uri = "pkg:/fonts/inter_extralight.ttf"
        else if fontStyle = "hint_30"
            font.size = 30
            font.uri = "pkg:/fonts/inter_extralight.ttf"
        else
            fontSettings = _parseValues(fontStyle)
            if fontSettings = invalid
                print `Unkown fontStyle [${fontStyle}], defaulting to label_40`
                fontSettings = { size: 40, uri: "pkg:/fonts/inter_Medium.ttf" }
            end if
            font.update(fontSettings)
        end if
        return font
    end function

    ' Tries to parse fonts of the form "size_weight" (e.g. "33_bold")
    function _parseValues(fontStyle)
        values = fontStyle.split("_")
        if values = invalid or values.count() <> 2
            return invalid
        end if

        fontWeight = values[1]
        if not fontWeights.doesExist(fontWeight)
            return invalid
        end if

        ' str.toInt() is too flexible and will allow weird values.
        ' parseJson will fail on strings that aren't pure numbers and that's what we want
        size = parseJson(values[0])
        if type(size) <> "roInt"
            return invalid
        end if

        return {
            size: size
            uri: `pkg:/fonts/inter_${fontWeight}.ttf`
        }
    end function

    ' Arrays don't have a "contains" function, so it's easier to use .doesExist on dict
    const fontWeights = { "bold": 1, "extralight": 1, "medium": 1, "regular": 1, "semibold": 1, "thin": 1 }
end namespace
