' Checks if [s] is a string and is not empty
function strNotEmpty(s) as boolean
    return getInterface(s, "ifString") <> invalid and s <> ""
end function

function substringBefore(s, delimiter, missingDelimiterValue = s)
    if s = invalid then return missingDelimiterValue
    index = s.instr(delimiter)
    if index = -1 then return missingDelimiterValue
    return s.left(index)
end function

function substringAfterLast(s, delimiter, missingDelimiterValue = s)
    if s = invalid then return missingDelimiterValue

    index = -1
    while true
        nextIndex = s.inStr(index + 1, delimiter)
        if nextIndex = -1
            ' no more occurances, [index] is our final result
            exit while
        else
            ' Advance [index] and look for more in the next iteration
            index = nextIndex
        end if
    end while

    if index = -1
        return missingDelimiterValue
    else
        return s.mid(index + 1)
    end if
end function